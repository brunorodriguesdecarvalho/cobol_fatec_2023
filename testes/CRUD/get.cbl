       IDENTIFICATION DIVISION.
       PROGRAM-ID. MY-PROGRAM.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SOURCE-COMPUTER. IBM-PC.
       OBJECT-COMPUTER. IBM-PC.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 SERVER-ADDRESS PIC X(20) VALUE 'www.example.com'.
       01 SERVER-PORT PIC S9(4) COMP VALUE 80.
       01 HTTP-REQUEST PIC X(500) VALUE SPACES.
       01 HTTP-RESPONSE PIC X(2000) VALUE SPACES.
       01 SOCKET-HANDLE PIC S9(8) COMP VALUE -1.
       01 BYTES-RECEIVED PIC S9(8) COMP VALUE 0.
       01 SOCKET-ADDRESS.
           05 FAMILY PIC S9(8) COMP VALUE 2.
           05 PORT PIC S9(8) COMP VALUE 0.
           05 ADDRESS PIC X(4) VALUE X'00000000'.
       PROCEDURE DIVISION.
       MAIN-LOGIC SECTION.
           DISPLAY 'Creating socket...'.
           CALL "SOCKET" USING AF-INET, SOCK-STREAM, 0, SOCKET-HANDLE.
           DISPLAY 'Resolving server address...'.
           CALL "GETHOSTBYNAME" USING BY VALUE SERVER-ADDRESS, BY REFERENCE SOCK
           MOVE SERVER-PORT TO SOCKET-ADDRESS-PORT
           DISPLAY 'Connecting to server...'
           CALL "CONNECT" USING SOCKET-HANDLE, SOCKET-ADDRESS, LENGTH OF SOCKET-
           DISPLAY 'Sending request...'
           MOVE "GET / HTTP/1.1^M^JHost: www.example.com^M^JConnection: close^M^
           CALL "SEND" USING SOCKET-HANDLE, ADDRESS OF HTTP-REQUEST, LENGTH OF H
           DISPLAY 'Receiving response...'
           PERFORM UNTIL BYTES-RECEIVED <= 0
               CALL "RECV" USING SOCKET-HANDLE, ADDRESS OF HTTP-RESPONSE, LENGTH
               IF BYTES-RECEIVED > 0
                   DISPLAY HTTP-RESPONSE(1:BYTES-RECEIVED)
               END-IF
           END-PERFORM
           DISPLAY 'Closing socket...'
           CALL "CLOSE" USING SOCKET-HANDLE
           STOP RUN.